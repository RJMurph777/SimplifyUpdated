{"ast":null,"code":"var _jsxFileName = \"/Users/rjmurphy/Documents/GitHub/SimplifyUpdated/client/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport TaskTile from './TaskTile';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [tasks, setTasks] = useState([]);\n  useEffect(() => {\n    fetch('http://localhost:4000/tasks').then(res => res.json()).then(data => setTasks(data)).catch(err => console.error('Failed to load tasks:', err));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: '24px'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Project Simplify Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Welcome to your new task-based email platform.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this), tasks.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading tasks...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 9\n    }, this) : tasks.map((task, i) => /*#__PURE__*/_jsxDEV(TaskTile, {\n      title: task.title,\n      status: task.status\n    }, i, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 11\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"bBd6yqkqV9dlkj9ENgRyXKaiXpk=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","TaskTile","jsxDEV","_jsxDEV","App","_s","tasks","setTasks","fetch","then","res","json","data","catch","err","console","error","style","padding","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","task","i","title","status","_c","$RefreshReg$"],"sources":["/Users/rjmurphy/Documents/GitHub/SimplifyUpdated/client/src/App.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport TaskTile from './TaskTile';\n\nfunction App() {\n  const [tasks, setTasks] = useState([]);\n\n  useEffect(() => {\n    fetch('http://localhost:4000/tasks')\n      .then(res => res.json())\n      .then(data => setTasks(data))\n      .catch(err => console.error('Failed to load tasks:', err));\n  }, []);\n\n  return (\n    <div style={{ padding: '24px' }}>\n      <h1>Project Simplify Dashboard</h1>\n      <p>Welcome to your new task-based email platform.</p>\n      {tasks.length === 0 ? (\n        <p>Loading tasks...</p>\n      ) : (\n        tasks.map((task, i) => (\n          <TaskTile key={i} title={task.title} status={task.status} />\n        ))\n      )}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,QAAQ,MAAM,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElC,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAEtCD,SAAS,CAAC,MAAM;IACdS,KAAK,CAAC,6BAA6B,CAAC,CACjCC,IAAI,CAACC,GAAG,IAAIA,GAAG,CAACC,IAAI,CAAC,CAAC,CAAC,CACvBF,IAAI,CAACG,IAAI,IAAIL,QAAQ,CAACK,IAAI,CAAC,CAAC,CAC5BC,KAAK,CAACC,GAAG,IAAIC,OAAO,CAACC,KAAK,CAAC,uBAAuB,EAAEF,GAAG,CAAC,CAAC;EAC9D,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEX,OAAA;IAAKc,KAAK,EAAE;MAAEC,OAAO,EAAE;IAAO,CAAE;IAAAC,QAAA,gBAC9BhB,OAAA;MAAAgB,QAAA,EAAI;IAA0B;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACnCpB,OAAA;MAAAgB,QAAA,EAAG;IAA8C;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,EACpDjB,KAAK,CAACkB,MAAM,KAAK,CAAC,gBACjBrB,OAAA;MAAAgB,QAAA,EAAG;IAAgB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,GAEvBjB,KAAK,CAACmB,GAAG,CAAC,CAACC,IAAI,EAAEC,CAAC,kBAChBxB,OAAA,CAACF,QAAQ;MAAS2B,KAAK,EAAEF,IAAI,CAACE,KAAM;MAACC,MAAM,EAAEH,IAAI,CAACG;IAAO,GAA1CF,CAAC;MAAAP,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAA2C,CAC5D,CACF;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV;AAAClB,EAAA,CAvBQD,GAAG;AAAA0B,EAAA,GAAH1B,GAAG;AAyBZ,eAAeA,GAAG;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}